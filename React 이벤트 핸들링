- 소문자 대신 카멜 케이스(camelCase)를 사용함
  - onclick => onClick
- JSX를 사용하여 문자열이 아닌 함수로, 이벤트 처리함수(이벤트 핸들러)를 전달
- 이벤트 핸들러는 props로 전달할 수 있음
  - <button onclick="handleEvent()">버튼</button>
  - <button onClick={handleEvent}>버튼</button>

자주 사용되는 이벤트 처리
  - onClick
  - onChange
    - <input><textarea><select>와 같은 폼(Form) 요소는 사용자의 입력값을 제어하는 데 사용
    - 변경 가능한 값은 일반적으로 상태 값(state)로 관리하고 업데이트
    - e.target.value를 통해 이벤트 객체에 담겨있는 input 값을 읽어올 수 있음

이벤트를 사용할 때 주의사항
  1. 이벤트 이름은 카멜 표기법으로 작성
    - onkeyup -> onKeyUp
  2. 이벤트 실행할 때 자바스크립트 코드를 전달하는 것이 아니라, 함수 형태의 값을 전달
    - 함수 형태의 객체를 전달
    - 화살표 함수 문법으로 함수 바로 만들어서 전달해도 되고, 렌더링 부분 외부에 미리 만들어서 전달해도 됨
  3. DOM 요소에만 이벤트 설정 가능
    - div, button, input, form, span 등
    - 우리가 직접 만든 컴포넌트에는 이벤트를 자체적으로 설정할 수 없음
    <MyComponent onClick={doSomething}/> // onClick이 이름인 props를 MyComponent에 전달해주는 것

리액트에서 지원하는 이벤트 종류
  https://developer.mozilla.org/en-US/docs/Web/Events
