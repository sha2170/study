모든 스프링 앱은 빈을 다음 중 하나로 선언하도록 정할 수 있음
  - 싱글톤 (Singleton) | 스프링의 기본 빈 스코프
      - 스프링 빈을 등록하면 소문자로 시작하는 클래스 이름으로 등록
  - 프로토타입 (Prototype)
      - 요청을 받을 때마다 해당 클래스의 새 인스턴스를 생성하는 스프링의 빈 스코프

웹 앱에서는 오직 웹 어플리케이션에서만 관련된 빈 스코프 사용 가능 -> 웹 스코프(web scope)

- 요청 스코프(request scope)
  - 스프링은 각 HTTP 요청에 대해 Bean 클래스의 인스턴스 생성
  - 이 인스턴스는 해당 HTTP 요청에서만 존재
  - @RequestScope 어노테이션 사용
- 세션 스코프 (session scope)
  - 스프링 인스턴스를 생성하고 전체 HTTP 세션 동안 서버의 메모리에 이 인스턴스 유지
  - 스프링은 컨텍스에서 이 인스턴스를 클라이언트의 세션과 연결
  - 특정 클라이언트에 대해 HTTP 세션이 생성될 때 세션 스코프 빈의 인스턴스를 생성
  - 세션 스코프 빈 속성에 저장된 데이터는 HTTP 세션 동안 클라이언트의 모든 요청에 사용될 수 있음
  - @SessionScope 어노테이션 사용
  - 동일한 HTTP 세션으로 전송된 모든 요청에 대해 동일한 인스턴스에 엑세스함
  - 세션 스코프 빈을 사용하여 구현할 수 있는 몇 가지 기능에 대한 예
    : 로그인 | 인증된 사용자가 사용하는 동안 세부 정보 유지
    : 온라인 쇼핑 장바구니
  - @SessionScope 사용 시 유의 사항
    1. 필요한 데이터만 저장
    2. 세션 유효시간 설정 : 웹 서버 설정에서 적절한 세션 유효 시간을 설정
    3. 세션 무효화 : 필요한 경우 코드에서 수동으로 세션을 무효화
    4. 보안 강화 : 세션 동용 방지를 위한 보안 조치를 취해야 함
    5. 스프링 세션 : 세션 관리 모듈을 고려
  - 어플리케이션 스코프 (application scope)
    - 인스턴스는 앱의 컨텍스트에서 고유함
    - 앱이 실행되는 동안 사용 가능
    - 싱글톤 방식
  
