데이터(Data)
  - 관찰이나 측정을 통해서 수집된 사실이나 값
  - 정량적 또는 정상적인 실제 값
  - 예 : 한라산 1950m 제주도, 지리산 1915m 전북
정보(Information)
  - 의사 결정에 도움이 되도록 데이터를 의미있는 패턴으로 정리한 것
  - 데이터에 의미를 부여한 것
  - 예 : 대한민국에서 가장 높은 산은 한라산

데이터 구조
  1. 논리적 구조(logical organization)
    - 사용자의 관점에서 본 데이터의 개념적 구조
    - 데이터의 논리적 배치
    - 논리적 레코드
  2. 물리적 구조(physical organization)
    - 저장 과정에서 본 데이터의 물리적 배치
    - 저장장치에 저장된 데이터의 실제 구조
    - 물리적 레코드

데이터베이스
  - 데이터의 집합체
  - 조직에 필요한 정보를 얻기 위해 논리적으로 연관된 데이터를 모아서 구조적으로 통합해놓은 것
  - 여러 사용자나 응용프로그램이 공유
  - 동시 접근 가능

데이터베이스 관리 시스템(DBMS)
  = Database Management System
  - 데이터베이스를 관리해주는 소프트웨어 시스템

데이터베이스 시스템
  - 통합된 데이터를 관리, 처리 및 사용자에게 서비스하기 위한 전체 시스템

데이터베이스 시스템 구성 요소
  - 데이터베이스(DB)
  - 데이터베이스 관리 시스템(DBMS)
  - 사용자(User)
  - 데이터베이스 관리자(DBA)  
  - 데이터베이스 컴퓨터
  - 시스템

데이터베이스 / DBMS 특징
  1. 데이터 공유
  2. 데이터 중복의 최소화
  3. 데이터의 독립성
    - 프로그램과 데이터 분리
  4. 데이터의 안정성 향상
    - 백업/복원
  5. 데이터의 무결성(Integrity)
    - 데이터베이스 안의 데이터는 오류가 없어야 함
    - 데이터베이스에 저장된 데이터 값과 표현하는 현실 세계의 실제 값이 일치해야 함
    - 데이터가 상호 간에 모순성이 없고, 현실 세계에 모순되지 않도록 데이터 유지
    - 데이터베이스 시스템에서 데이터 무결성 오류를 방지하기 위해 외래기(FK)를 사용하여 테이블 간의 모순성 배제
  6. 무결성 제약 조건
    - 무결성을 보장하기 위한 조건
    - 정확하지 않은 데이터가 데이터베이스 내에 저장되는 것을 방지하기 위한 제약 조건
  7. 보안
    - 데이터베이스의 테이블에 따라 접근 권한을 다르게 하여 데이터베이스의 비밀 유지와 조작을 방지
  8. 데이터 추상화
    - 사용자는 복잡한 물리적 저장구조를 알지 못해도 테이블 개념만으로 DB를 생성/관리할 수 있음
    - DBMS가 지원
  9. 다양한 뷰 제공

데이터베이스 관리 시스템의 기능
  1. 데이터 정의(Definition)
    - 데이터 구조 정의
    - 데이터 구조에 대한 삭제 및 변경 기능 수행
  2. 데이터 조작(Manipulation)
    - 데이터를 조작하는 소프트웨어가 요청하는 데이터의 CRUD 작업 지원
  3. 데이터 제어(Control)
    - 데이터베이스 사용자를 생성, 모니터링, 접근 제어
    - 무결성, 보안 및 권한 검사, 백업과 회복, 동시성 제어 등의 기능 지원

데이터 언어(Data Language)
  - 데이터베이스를 구축하고 이용하기 위한 데이터베이스 관리 시스템과의 통신 수단
  - 데이터 정의어(DDL : Data Definition Language)
  - 데이터 조작어(DML : Data Manipulation Language)
  - 데이터 제어어(DCL : Data Control Language)

데이터 정의어(DDL)
  - 데이터베이스 구조 정의를 위한 언어
  - 데이터베이스 구조, 데이터 형식, 접근 방식 등 데이터베이스 구축 및 변경
  - 데이터베이스의 논리적, 물리적 구조 정의 및 변경
  - 스키마에 사용하는 제약조건 정의
    * 스키마 : 데이터베이스의 전체 구조 명시
  - 데이터의 물리적 순서 규정
  - CREATE / DROP / ALTER

데이터 조작어(DML)
  - 데이터 처리를 위해 응용프로그램과 데이터베이스 관리 시스템 간의 인터페이스를 위한 언어
  - 데이터 처리 연산 가능 | 검색, 삽입, 삭제, 갱신, 연산 등
  - INSERT / DELETE / UPDATE / SELECT

데이터 제어어(DCL)
  - 보안 및 권한 제어, 데이터 무결성 복구, 병행 제어 등을 위한 언어
  - 데이터 보안 : 권한이 없는 접근으로부터 보호
  - 데이터 무결성 : 데이터의 정확성, 안정성 보장, 모순 제거
  - 데이터 복구 : 시스템 오류 등으로 회복(원래 상태로)
  - 병행 제어 : 다수 사용자 공유
  - GRANT / REVOKE / COMMIT / ROLLBACK

데이터베이스의 발전
  1. 오프라인 관리
    - 종이에 연필로 기록해 장부로 관리
  2. 파일 시스템 사용
    - 컴퓨터 파일에 기록/저장 -> 메모장/엑셀 활용
    - 읽고, 쓰기 편한 약속된 형태의 구조 사용
    - 데이터 중복으로 인한 불일치 문제
  3. 데이터베이스 관리 시스템(DBMS)
    - 데이터의 집합
    - 파일 시스템의 단점 보완
    - 대량의 데이터를 보다 효율적으로 관리하고 운영

데이터베이스 관리 시스템(DBMS) 종류
  1. 계층형 DBMS
    - 레코드들을 계층 구조로 표현한 데이터 모델 사용
    - 검색은 빠르지만, 구조 변경이 어렵고, 데이터 중복 문제 발생
  2. 네트워크형 DBMS
    - 레코드 타입과 링크(Pointer들의 집합)로 구성
    - 복잡합 내부 포인터 사용
    - 프로그래머가 이 모든 구조를 이해해야만 프로그램의 작성 가능
  3. 관계형 DBMS
    - 논리적 구조가 테이블 형태
    - 속성 값 사용
  4. NoSQL 데이터베이스
    = Not Only SQL
    - SQL을 사용하지 않는다는 의미
    - SQL이 필요없다는 의미는 아니고, 개선/보완의 의미
    - 관계형 데이터베이스보다 덜 제한적인 일관성 모델 이용
    - 키(key)와 값(value) 형태로 저장
    - 키를 사용해서 데이터 관리 및 접근
    - MongoDB

관계형 데이터 모델 | 데이터를 2차원 테이블 형태인 릴레이션 구조(테이블 구조)로 표현하는 논리적 데이터 모델

릴레이션
  - 관계형 데이터 구조
  - 데이터를 원자 값으로 갖는 2차원의 테이블로 표현
  - 논리적 구조이므로 다양한 정렬 기준을 통하여 릴레이션 표현 가능

릴레이션 스키마-구조
  - 릴레이션에 데이터를 넣을 수 있도록하는 릴레이션 틀
  - 릴레이션 이름(테이블 이름), 속성 이름(열 이름), 속성 값의 도메인 정의

속성(Attribute: 열/칼럼)
  - 데이터베이스를 구성하는 가장 작은 논리적 단위
  - 열/칼럼(column)
  - 객체의 특성, 상태 등 기술
  - 파일 구조의 데이터 필드에 해당
  - 속성 : 학번, 이름, 학과, 학년, 주소 등

도메인(Domain)
  - 하나의 속성이 취할 수 있는 같은 타입의 원자값들의 집합
  - 예 : [학년] 초등학생 1~6, 대학생 1~4

튜플(Tuple)
  - 릴레이션의 행(Row) (데이터 행)
  - 릴레이션 내의 모든 튜플(행)은 서로 중복되어서는 안됨

릴레이션의 특징
  1. 속성(열)은 단일 값을 가짐
    - 한 속성은 2개 이상의 값을 가질 수 없음
  2. 속성은 서로 다른 이름을 가짐
  3. 한 속성의 값은 모두 같은 도메인 값을 가짐
  4. 속성의 순서는 상관없음
    - 속성의 순서가 달라도 릴레이션 스키마는 같음
  5. 릴레이션 내의 중복된 튜플은 허용하지 않음
    - 각 튜플을 서로 다르게 구별 짓는 속성 : 기본키
  6. 튜플의 순서는 상관없음

제약(Constraints)
  - 데이터베이스에 저장되는 데이터에 대한 규칙
  - 데이터베이스의 기본 구조를 유지
  - 현실 세계에서 데이터가 갖는 의미를 보다 정확하게 표현
  - 데이터의 오류를 방지하기 위한 중요한 수단

관계 데이터 제약
  - 키
  - 무결성 제한 조건

키(Key)
  - 릴레이션을 구성하는 각 튜플을 속성 값에 의해 유일하게 식별할 수 있게 해주는 속성 또는 속성의 집합
  - 릴레이션은 중복된 튜플을 허용하지 않기 때문에 각 튜플에 포함된 속성들 중 어느 하나(또는 하나 이상)는 값이 달라야 함

  1. 기본키(주 키, Primary Key, PK)
    - 한 릴레이션에서 모든 튜플을 유일하게 구별할 수 있는 속성(중복 안됨)
    - NULL 값은 허용하지 않음
    - 키 값의 변동이 일어나지 않아야함
  2. 외래키(Foreign Key, FK)
    - 다른 릴레이션의 기본키를 참조하는 속성
    - 릴레이션 간의 관계표현에 사용
    - 참조하고(외래키) 참조되는(기본키) 양쪽 릴레이션의 도메인 서로 동일
    - 참조되는(기본키) 값이 변경되면 참조하는(외래키) 값도 변경
    - NULL 값과 중복값 허용
  3. 복합키
    - 여러 개의 속성을 묶어서 기본키로 사용하는 키
  
  
