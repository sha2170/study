스프링 시큐리티 (Spring Security)
  - 스프링 기반의 어플리케이션 보안(인증, 인가, 권한)을 담당하는 스프링의 하위 프레임워크

인증과 인가
  - 인증(Authentication) : 사용자의 신원을 입증하는 과정
      - 예 : 사용자가 누구인지 확인하는 과정
  - 인가(Authorization) : 사이트의 특정 부분에 접근할 수 있는지 권한을 확인하는 작업
      - 예 : 관리자는 관리자 페이지에 접근 가능, 일반 사용자는 관리자 페이지에 접근 불가

- 보안 관련 옵션을 많이 제공함
- 애너테이션으로 설정이 매우 쉬움
- CSRF 공격, 세션 고정(session fixation) 공격을 방어, 요청 헤더도 보안 처리
    - 스프링 시큐리티는 기본적으로 CSRF 공격을 방어할 수 있는 CSRF 토큰을 자동으로 활성화
    - CSRF 보호는 POST, PUT, DELETE와 같은 상태 변경 요청에 자동으로 적용
    - 스프링 시큐리티는 세션 재생성을 통해 기존에 고정된 세션 ID를 무효화
    - HTTP 응답헤더에 대한 다양한 보안 기능을 기본적으로 활성화

- X-Frame-Options
- X-XSS-Protection
- Cross-Site Scripting(XSS) 방어 방법
  - 입력 값 검증 및 인코딩
  - Content Security Policy(CSP) 적용
  - 출력 시 이스케이프 처리
    - 예 : < :&lt (less than)
          > : &gt (greater than)
          & : %amp (ampersand)
          " : &quot
  - 이스케이프 처리를 하지 않았을 경우
    - <script>alert('악성 코드')</script) : 악성 코드들이 스크립트로 실행되어서 스프링 프레임워크나 템플릿 엔진은 기본적으로 자동 이스케이프 처리를 지원
- HSTS
- Content-Security-Policy(CSP)

- 필터를 기반으로 동작하는 스프링 시큐리티 | 다양한 필터들로 나눠져 있으며, 각 필터에서 인증, 인가와 관련된 작업을 처리함
1. SecurityContextPersistenceFilter : 보안 컨텍스트 지속성 필터 
  - SecurityContextRepository에서 SecurityContext(접근 주체와 인증에 대한 정보를 담고 있는 객체)를 가져오거나 저장하는 역할
2. LogoutFilter : 로그아웃 필터
  - 설정된 로그아웃 URL로 오는 요청을 확인해 해당 사용자를 로그아웃 처리
3. UsernamePasswordAuthenticationFilter : 사용자 이름 비밀번호 인증 필터
  - 인증 관리자, 폼 기반 로그인을 할 때 사용되는 필터로 아이디, 패스워드 데이터를 파싱해 인증 요청을 위임
  - 인증 성공하면 AuthenticationSuccessHandler를, 인증 실패하면 AuthenticationFailureHandler를 실행
4. DefaultLoginPageGeneratingFilter : 기본 로그인 페이지 생성 필터
  - 사용자가 로그인 페이지를 따로 지정하지 않았을 때 기본으로 설정하는 로그인 페이지 관련 필터
5. BasicAuthenticationFilter : 기본 인증 필터
  - 요청 헤더에 있는 아이디와 패스워드를 파싱해서 인증 요청을 위임
  - 인증 성공하면 AuthenticationSuccessHandler, 인증 실패하면 AuthenticationFailureHandler 실행
6. RequestCacheAwareFilter : 요청 캐시어웨어 필터
  - 로그인 성공 후, 관련 있는 캐시 요청이 있는지 확인하고 캐시 요청을 처리
  - 예 : 로그인하지 않은 상태로 방문했던 페이지를 기억해두었다가 로그인 이후에 그 페이지로 이동시켜줌
7. SecurityContextHolderAwareRequestFilter : 보안 컨텍스트 홀더 인식 요청 필터
  - HttpServletRequest 정보를 감쌈
  - 필터 체인 상의 다음 필터들에게 부가 정보를 제공하기 위해 사용
8. AnonymousAuthenticationFiler : 익명 인증 필터
  - 필터가 호출되는 시점까지 인증되지 않았다면 익명 사용자 전용 객체인 AnonymousAuthentication을 만들어 SecurityContext에 넣어줌
9. SessionManagementFilter : 세션 관리 필터
  - 인증된 사용자와 관련된 세션 관련 작업을 실행
  - 세션 변조 방지 전략을 설정하고, 유효하지 않은 세션에 대한 처리를 하고, 세션 생성 전략을 세우는 등의 작업 처리
10. ExceptionTranslationFilter : 예외 번역 필터
  - 요청을 처리하는 중에 발생할 수 있는 예외를 위임하거나 전달
11. FilterSecurityInterceptor : 필터 보안 인터셉터
  - 접근 결정 관리자
  - AccessDecisionManager로 권한 부여 처리를 위임함으로써 접근 제어 결정을 쉽게 해줌
  - 이미 사용자가 인증되어 있으므로 유효한 사용자인지도 파악 가능
  - 즉, 인가 관련 설정을 할 수 있음

- @Builder 어노테이션
  - 빌더 패턴을 자동으로 생성해주는 어노테이션
  - Lombok 라이브러리에서 제공
  - 빌더 패턴은 복잡한 객체를 생성할 때 유용함
  - 생성자나 Setter 메서드는 사용하지 않고 가독성을 높여주는 객체 생성 방식을 제공

- @Column 어노테이션
  - JPA에서 엔티티 클래스의 필드를 데이터베이스 테이블의 컬럼과 매핑할 때 사용
  - 특정 필드가 테이블의 어느 컬럼에 매핑된지, 제약 조건이나 속성은 어떻게 적용될지 정의할 수 있음

- UserDetailService
  - 스프링 시큐리티에서 사용자 정보를 가져오는 UserDetailsService 인터페이스를 구현
  - 필수로 구현해야하는 loadUserByUsername() 메서드 오버라이딩해서 사용자 정보를 가져오는 로직 작성

